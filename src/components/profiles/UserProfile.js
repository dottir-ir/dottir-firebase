import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React from 'react';
import { User } from '../../models/User';
import { Card, CardContent, Typography, Avatar, Box, Chip, Stack } from '@mui/material';
import { format } from 'date-fns';
export const UserProfile = ({ user, isOwnProfile = false }) => {
    return (_jsx(Card, { sx: { maxWidth: 800, mx: 'auto', my: 2 }, children: _jsx(CardContent, { children: _jsxs(Box, { sx: { display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 3 }, children: [_jsx(Box, { sx: { display: 'flex', justifyContent: 'center', flex: { md: '0 0 33.333%' } }, children: _jsx(Avatar, { src: user.photoURL, alt: user.displayName, sx: { width: 150, height: 150 } }) }), _jsxs(Box, { sx: { flex: 1 }, children: [_jsx(Typography, { variant: "h4", gutterBottom: true, children: user.displayName }), _jsx(Typography, { variant: "subtitle1", color: "text.secondary", gutterBottom: true, children: user.title }), _jsx(Typography, { variant: "subtitle2", color: "text.secondary", gutterBottom: true, children: user.role.charAt(0).toUpperCase() + user.role.slice(1) }), user.role === 'student' && (_jsxs(_Fragment, { children: [user.medicalSchool && (_jsxs(Typography, { variant: "body1", gutterBottom: true, children: ["Medical School: ", user.medicalSchool] })), user.yearOfStudy && (_jsxs(Typography, { variant: "body1", gutterBottom: true, children: ["Year of Study: ", user.yearOfStudy] })), user.areasOfInterest && user.areasOfInterest.length > 0 && (_jsxs(Box, { mt: 1, mb: 2, children: [_jsx(Typography, { variant: "subtitle2", gutterBottom: true, children: "Areas of Interest:" }), _jsx(Stack, { direction: "row", spacing: 1, flexWrap: "wrap", useFlexGap: true, children: user.areasOfInterest.map((area, index) => (_jsx(Chip, { label: area, size: "small", sx: { m: 0.5 } }, index))) })] }))] })), user.role === 'doctor' && (_jsxs(_Fragment, { children: [user.specialization && (_jsxs(Typography, { variant: "body1", gutterBottom: true, children: ["Specialization: ", user.specialization] })), user.institution && (_jsxs(Typography, { variant: "body1", gutterBottom: true, children: ["Institution: ", user.institution] })), user.verificationDocuments && user.verificationDocuments.length > 0 && (_jsxs(Box, { mt: 1, children: [_jsx(Typography, { variant: "subtitle2", gutterBottom: true, children: "Verification Documents:" }), _jsx(Stack, { direction: "row", spacing: 1, flexWrap: "wrap", useFlexGap: true, children: user.verificationDocuments.map((doc, index) => (_jsx(Chip, { label: doc, size: "small", sx: { m: 0.5 } }, index))) })] }))] })), user.bio && (_jsx(Box, { mt: 2, children: _jsx(Typography, { variant: "body1", children: user.bio }) })), _jsx(Box, { mt: 2, children: _jsxs(Typography, { variant: "body2", color: "text.secondary", children: ["Member since ", format(user.createdAt, 'MMMM yyyy')] }) })] })] }) }) }));
};
